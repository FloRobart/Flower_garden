services:
  #==========#
  # Database #
  #==========#
  # FlorAccess Database #
  floraccess-db:
    build:
      context: ./FlorAccess/Database
      dockerfile: Dockerfile
    image: floraccess-db:latest
    restart: always
    env_file:
      - ./config/.env.floraccess_db
    volumes:
      - floraccess_db_data:/var/lib/postgresql/floraccess_db_data
      - ./FlorAccess/Database:/docker-entrypoint-initdb.d
    networks:
      - floraccess-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${FLORACCESS_DB_USER} -d ${FLORACCESS_DB_NAME} || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 5

  # Econoris Database #
  econoris-db:
    build:
      context: ./Econoris_server/Database
      dockerfile: Dockerfile
    image: econoris-db:latest
    restart: always
    env_file:
      - ./config/.env.econoris_db
    volumes:
      - econoris_db_data:/var/lib/postgresql/econoris_db_data
      - ./Econoris_server/Database:/docker-entrypoint-initdb.d
    networks:
      - econoris-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ECONORIS_DB_USER} -d ${ECONORIS_DB_NAME} || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 5


  #========#
  # Server #
  #========#
  # FlorAccess Server #
  floraccess-server:
    build:
      context: ./FlorAccess
      dockerfile: Dockerfile
    image: floraccess-server:latest
    restart: always
    env_file:
      - ./config/.env.floraccess_server
    depends_on:
      floraccess-db:
        condition: service_healthy
    networks:
      - flower_garden-net
      - floraccess-net
    ports:
      - ${FLORACCESS_SERVER_PORT:-}:80
    # Security hardening
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    user: "1800:1800"
    tmpfs:
      - /tmp:exec,nosuid,nodev
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://floraccess-server:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Econoris Server #
  econoris-server:
    build:
      context: ./Econoris_server
      dockerfile: Dockerfile
    image: econoris-server:latest
    restart: always
    env_file:
      - ./config/.env.econoris_server
    depends_on:
      econoris-db:
        condition: service_healthy
    networks:
      - flower_garden-net
      - econoris-net
    ports:
      - ${ECONORIS_SERVER_PORT:-}:80
    # Security hardening
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    user: "1800:1800"
    tmpfs:
      - /tmp:exec,nosuid,nodev
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://econoris-server:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5


  #==========#
  # Web apps #
  #==========#
  econoris-app-web:
    build:
      context: ./econoris_app
      dockerfile: Dockerfile
    image: econoris-app-web:latest
    restart: always
    env_file:
      - ./config/.env.econoris_app
    networks:
      - flower_garden-net
    ports:
      - ${ECONORIS_APP_PORT:-}:80
    depends_on:
      econoris-server:
        condition: service_healthy
      floraccess-server:
        condition: service_healthy
    # Security hardening
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    user: "1800:1800"
    tmpfs:
      - /tmp:exec,nosuid,nodev,uid=1800,gid=1800
      - /run:rw,mode=0755,uid=1800,gid=1800
      - /run/nginx:rw,mode=0755,uid=1800,gid=1800
      - /var/cache/nginx:rw,uid=1800,gid=1800
      - /var/cache/nginx/client_temp:rw,uid=1800,gid=1800
      - /var/cache/nginx/proxy_temp:rw,uid=1800,gid=1800
      - /var/cache/nginx/fastcgi_temp:rw,uid=1800,gid=1800
      - /var/cache/nginx/uwsgi_temp:rw,uid=1800,gid=1800
      - /var/cache/nginx/scgi_temp:rw,uid=1800,gid=1800
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://econoris-app-web:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  econoris_db_data:
  floraccess_db_data:



networks:
  floraccess-net:
    driver: bridge
  econoris-net:
    driver: bridge
  flower_garden-net:
    driver: bridge
